//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.09 at 03:52:24 PM PST 
//


package org.yeastrc.emozi.emozi_import.api.xml_dto;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}search_program_info"/>
 *         &lt;element ref="{}reported_peptides"/>
 *         &lt;element ref="{}matched_proteins"/>
 *         &lt;element ref="{}static_modifications" minOccurs="0"/>
 *         &lt;element ref="{}configuration_files" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="fasta_filename" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="comment" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "searchProgramInfo",
    "reportedPeptides",
    "matchedProteins",
    "staticModifications",
    "configurationFiles"
})
@XmlRootElement(name = "emozi_input")
public class EmoziInput {

    @XmlElement(name = "search_program_info", required = true)
    protected SearchProgramInfo searchProgramInfo;
    @XmlElement(name = "reported_peptides", required = true)
    protected ReportedPeptides reportedPeptides;
    @XmlElement(name = "matched_proteins", required = true)
    protected MatchedProteins matchedProteins;
    @XmlElement(name = "static_modifications")
    protected StaticModifications staticModifications;
    @XmlElement(name = "configuration_files")
    protected ConfigurationFiles configurationFiles;
    @XmlAttribute(name = "fasta_filename", required = true)
    protected String fastaFilename;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "comment")
    protected String comment;

    /**
     * Gets the value of the searchProgramInfo property.
     * 
     * @return
     *     possible object is
     *     {@link SearchProgramInfo }
     *     
     */
    public SearchProgramInfo getSearchProgramInfo() {
        return searchProgramInfo;
    }

    /**
     * Sets the value of the searchProgramInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link SearchProgramInfo }
     *     
     */
    public void setSearchProgramInfo(SearchProgramInfo value) {
        this.searchProgramInfo = value;
    }

    /**
     * All the distinct reported peptides from a PSM search. A reported peptide is a string that uniquely identifies an identified peptide IN THIS SEARCH. For example “PEPTIDE” and “PEP[43.023]TIDE” would be different reported peptides, identified by different PSMs. There is no expected syntax for reported peptides, but the reported peptide string must be unique.
     * 
     * @return
     *     possible object is
     *     {@link ReportedPeptides }
     *     
     */
    public ReportedPeptides getReportedPeptides() {
        return reportedPeptides;
    }

    /**
     * Sets the value of the reportedPeptides property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportedPeptides }
     *     
     */
    public void setReportedPeptides(ReportedPeptides value) {
        this.reportedPeptides = value;
    }

    /**
     * Contains the protein sequences matched by peptides found in the experiment, and associated names, descriptions, and taxonomy IDs for those proteins. This will typically come from the FASTA file used to search the data. Only the proteins matched by the data should be included, not all the proteins in the FASTA file.
     * 
     * @return
     *     possible object is
     *     {@link MatchedProteins }
     *     
     */
    public MatchedProteins getMatchedProteins() {
        return matchedProteins;
    }

    /**
     * Sets the value of the matchedProteins property.
     * 
     * @param value
     *     allowed object is
     *     {@link MatchedProteins }
     *     
     */
    public void setMatchedProteins(MatchedProteins value) {
        this.matchedProteins = value;
    }

    /**
     * Gets the value of the staticModifications property.
     * 
     * @return
     *     possible object is
     *     {@link StaticModifications }
     *     
     */
    public StaticModifications getStaticModifications() {
        return staticModifications;
    }

    /**
     * Sets the value of the staticModifications property.
     * 
     * @param value
     *     allowed object is
     *     {@link StaticModifications }
     *     
     */
    public void setStaticModifications(StaticModifications value) {
        this.staticModifications = value;
    }

    /**
     * (Optional) The configuration files associated with the search.
     * 
     * @return
     *     possible object is
     *     {@link ConfigurationFiles }
     *     
     */
    public ConfigurationFiles getConfigurationFiles() {
        return configurationFiles;
    }

    /**
     * Sets the value of the configurationFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConfigurationFiles }
     *     
     */
    public void setConfigurationFiles(ConfigurationFiles value) {
        this.configurationFiles = value;
    }

    /**
     * Gets the value of the fastaFilename property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFastaFilename() {
        return fastaFilename;
    }

    /**
     * Sets the value of the fastaFilename property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFastaFilename(String value) {
        this.fastaFilename = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the comment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the value of the comment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComment(String value) {
        this.comment = value;
    }

}
